#!/usr/bin/env node

const http = require('http');
const config = require('../server/config');
const app = require('../server');
const db = require('../server/db');

/**
 * Create HTTP server.
 */
const server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(config.port, '0.0.0.0');
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */

/*eslint-disable prefer-template*/
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof config.port === 'string'
    ? 'Pipe ' + config.port
    : 'Port ' + config.port;

  // handle specific listen errors with friendly messages
  /*eslint-disable indent*/
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.info('Listening on ' + bind);
  // promise.connection.on("error", function (error) {
  //   console.log("数据库连接失败：" + error);
  // });
  db.then(function(){
    console.log('-数据库连接成功-');
  });
  //console.info(`current env is [${process.env.NODE_ENV}]`);
}
